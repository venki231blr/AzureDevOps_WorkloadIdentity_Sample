parameters:
 env: ''
 tfcodelocation: ''

jobs:
- deployment: deploy_infrastructure_${{ parameters.env }}
  displayName: 'Deploy infrastructure for ${{ parameters.env }}'
  pool:
    vmImage: 'windows-latest'
  environment: 'deploy_infrastructure_${{ parameters.env }}' # Pipeline Environment (ADO), benefit??
      # First, you need to make sure you are Creator in the Security of environment to solve below issue:
      # Job deploy_infrastructure_dev: Environment dev could not be found. => needs to be first created
      # The environment does not exist or has not been authorized for use.

  strategy:
    runOnce: ## RunOnce vs Canary Deployment
      deploy:
        steps:
          - checkout: none
          - download: current # get latest artifact
            artifact: 'output-${{ parameters.env }}' #fetch the output file from the plan phase

                   
          - task: JasonBJohnson.azure-pipelines-tasks-terraform.azure-pipelines-tasks-terraform-installer.TerraformInstaller@0
            inputs:
              terraformVersion: 'latest'

          - task: TerraformCLI@2
            displayName: 'Apply Terraform'
            inputs:
              command: apply
              workingDirectory: '$(Pipeline.Workspace)/output-${{ parameters.env }}/${{parameters.tfcodelocation}}'
              environmentServiceName: $(ServiceConnectionName)
              commandOptions: ' -lock=true -lock-timeout=5m $(Pipeline.Workspace)/output-${{ parameters.env }}/${{parameters.tfcodelocation}}/terraform.tfplan'